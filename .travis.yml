sudo: required
dist: trusty
language: node_js
node_js:
  - '5'
services:
- docker
- mysql
cache:
  directories:
  - node_modules
env:
  global:
    - PATH=${HOME}/google-cloud-sdk/bin:$PATH
    - CLOUDSDK_CORE_DISABLE_PROMPTS=1
before_install:
# TIMEZONE options here: https://en.wikipedia.org/wiki/List_of_tz_database_time_zones
- export TZ=Europe/London
- openssl aes-256-cbc -K $encrypted_d68f0083a6dc_key -iv $encrypted_d68f0083a6dc_iv
  -in travis-encrypt.tar.gz.enc -out travis-encrypt.tar.gz -d
- tar -xzf travis-encrypt.tar.gz

# docker and mysql service can't be installed at the same time
# https://github.com/travis-ci/travis-ci/issues/4870
- sudo apt-get install -y mysql-server-5.6 mysql-client-5.6 mysql-client-core-5.6
- mysql -e "CREATE DATABASE IF NOT EXISTS gauntface_site_db_test;" -u root
- mysql -e "USE gauntface_site_db_test;" -u root
- mysql -e "CREATE USER 'gf_site_test'@'localhost' IDENTIFIED BY 'test_password';" -u root
- mysql -e "GRANT ALL PRIVILEGES ON gauntface_site_db_test.* TO 'gf_site_test'@'localhost';" -u root
install:
- curl https://sdk.cloud.google.com | bash;
- which gcloud
- gcloud --version
- gcloud auth activate-service-account --key-file client-secret.json
- gcloud config set project $CLOUD_PROJECT
- npm install -g gulp
- npm install
before_script:
- export DISPLAY=:99.0
- sh -e /etc/init.d/xvfb start
- npm run test
- sudo rm -rf ./build
- if [[ $TRAVIS_BRANCH == "master" ]] ; then export BUILDTYPE="production"; else export BUILDTYPE=$TRAVIS_BRANCH; fi
- if [[ $BUILDTYPE == "production" ]] ; then export CERT_DOMAIN=gauntface.com; else export CERT_DOMAIN=$BUILDTYPE.gauntface.com; fi
- gulp "$BUILDTYPE"
- ls -l build
- if [[ ( $BUILDTYPE = "staging" || $BUILDTYPE = "production" ) && "$TRAVIS_PULL_REQUEST" = "false" ]]; then docker login -e="$DOCKER_EMAIL" -u="$DOCKER_USERNAME" -p="$DOCKER_PASSWORD"; fi
- if [[ ( $BUILDTYPE = "staging" || $BUILDTYPE = "production" ) && "$TRAVIS_PULL_REQUEST" = "false" ]]; then docker push gauntface/gf-site:$BUILDTYPE; fi
script:
- if [[ ( $BUILDTYPE = "staging" || $BUILDTYPE = "production" ) && "$TRAVIS_PULL_REQUEST" = "false" ]]; then ./deployment/create-image-instance.sh; fi
